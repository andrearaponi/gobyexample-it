<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: Chiusura dei Canali</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      window.onkeydown = (e) => {
          if (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) {
              return;
          }
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'operazioni-non-bloccanti-sui-canali';
          }
          
          
          if (e.key == "ArrowRight") {
              window.location.href = 'range-sui-canali';
          }
          
      }
  </script>
  <body>
    <div class="example" id="chiusura-dei-canali">
      <h2><a href="./">Go by Example</a>: Chiusura dei Canali <button id="theme-toggle" title="Cambia tema"><span id="theme-icon">üåô</span></button></h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p><em>Chiudere</em> un canale indica che non verranno pi√π inviati
valori su di esso. Questo pu√≤ essere utile per comunicare
il completamento ai riceventi del canale.</p>

          </td>
          <td class="code empty leading">
            
          
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            <a href="https://go.dev/play/p/0rTZbF--si8"><img title="Esegui codice" src="play.png" class="run" /></a><img title="Copia codice" src="clipboard.png" class="copy" />
          <pre class="chroma"><code><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl"><span class="kn">import</span> <span class="s">&#34;fmt&#34;</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>In questo esempio useremo un canale <code>jobs</code> per
comunicare lavoro da fare dalla goroutine <code>main()</code>
a una goroutine worker. Quando non abbiamo pi√π job per
il worker, chiuderemo il canale <code>jobs</code>.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">jobs</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">done</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Ecco la goroutine worker. Riceve ripetutamente
da <code>jobs</code> con <code>j, more := &lt;-jobs</code>. In questa
forma speciale di ricezione a 2 valori, il valore <code>more</code>
sar√† <code>false</code> se <code>jobs</code> √® stato chiuso e tutti
i valori nel canale sono gi√† stati ricevuti.
Usiamo questo per notificare su <code>done</code> quando abbiamo
lavorato tutti i nostri job.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl">    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">j</span><span class="p">,</span> <span class="nx">more</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">jobs</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="nx">more</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;received job&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;received all jobs&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nx">done</span> <span class="o">&lt;-</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}()</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Questo invia 3 job al worker tramite il canale <code>jobs</code>,
poi lo chiude.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl">    <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">jobs</span> <span class="o">&lt;-</span> <span class="nx">j</span>
</span></span><span class="line"><span class="cl">        <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;sent job&#34;</span><span class="p">,</span> <span class="nx">j</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nb">close</span><span class="p">(</span><span class="nx">jobs</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;sent all jobs&#34;</span><span class="p">)</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Aspettiamo il worker usando l&rsquo;approccio di
<a href="sincronizzazione-con-canali">sincronizzazione</a> che
abbiamo visto prima.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl">    <span class="o">&lt;-</span><span class="nx">done</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Leggere da un canale chiuso ha successo immediatamente,
restituendo il valore zero del tipo sottostante.
Il secondo valore di ritorno opzionale √® <code>true</code> se il
valore ricevuto √® stato consegnato da un&rsquo;operazione di invio
riuscita al canale, o <code>false</code> se era un valore zero
generato perch√© il canale √® chiuso e vuoto.</p>

          </td>
          <td class="code">
            
          <pre class="chroma"><code><span class="line"><span class="cl">    <span class="nx">_</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">jobs</span>
</span></span><span class="line"><span class="cl">    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;received more jobs:&#34;</span><span class="p">,</span> <span class="nx">ok</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre class="chroma"><code><span class="line"><span class="cl"><span class="gp">$</span> go run chiusura-dei-canali.go 
</span></span><span class="line"><span class="cl"><span class="go">sent job 1
</span></span></span><span class="line"><span class="cl"><span class="go">received job 1
</span></span></span><span class="line"><span class="cl"><span class="go">sent job 2
</span></span></span><span class="line"><span class="cl"><span class="go">received job 2
</span></span></span><span class="line"><span class="cl"><span class="go">sent job 3
</span></span></span><span class="line"><span class="cl"><span class="go">received job 3
</span></span></span><span class="line"><span class="cl"><span class="go">sent all jobs
</span></span></span><span class="line"><span class="cl"><span class="go">received all jobs
</span></span></span><span class="line"><span class="cl"><span class="go">received more jobs: false</span></span></span></code></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>L&rsquo;idea dei canali chiusi porta naturalmente al nostro prossimo
esempio: <code>range</code> sui canali.</p>

          </td>
          <td class="code empty">
            
          
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Prossimo esempio: <a href="range-sui-canali" rel="next">Range sui Canali</a>.
      </p>
      

    <p class="footer">
      di <a href="https://markmcgranaghan.com">Mark McGranaghan</a> e <a href="https://eli.thegreenplace.net">Eli Bendersky</a><br>
      traduzione di <a href="https://andrearaponi.it">Andrea Raponi</a> | <a href="https://github.com/andrearaponi/gobyexample-it">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
    </p>

    </div>
    <script>
      var codeLines = [];
      codeLines.push('');codeLines.push('package main\u000A');codeLines.push('import \"fmt\"\u000A');codeLines.push('func main() {\u000A    jobs :\u003D make(chan int, 5)\u000A    done :\u003D make(chan bool)\u000A');codeLines.push('    go func() {\u000A        for {\u000A            j, more :\u003D \u003C-jobs\u000A            if more {\u000A                fmt.Println(\"received job\", j)\u000A            } else {\u000A                fmt.Println(\"received all jobs\")\u000A                done \u003C- true\u000A                return\u000A            }\u000A        }\u000A    }()\u000A');codeLines.push('    for j :\u003D 1; j \u003C\u003D 3; j++ {\u000A        jobs \u003C- j\u000A        fmt.Println(\"sent job\", j)\u000A    }\u000A    close(jobs)\u000A    fmt.Println(\"sent all jobs\")\u000A');codeLines.push('    \u003C-done\u000A');codeLines.push('    _, ok :\u003D \u003C-jobs\u000A    fmt.Println(\"received more jobs:\", ok)\u000A}\u000A');codeLines.push('');codeLines.push('');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
